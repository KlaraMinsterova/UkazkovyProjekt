@using BL.DTOs.Enums
@model PL.Models.Applicant.ApplicantEditModel
@{
    ViewBag.Title = "ChangeApplicantInformation";
}

<h2>Change your information</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Applicant.FirstName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Applicant.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Applicant.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Applicant.LastName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Applicant.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Applicant.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Applicant.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Applicant.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Applicant.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Applicant.Tel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Applicant.Tel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Applicant.Tel, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Applicant.Education, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Applicant.Education, new { htmlAttributes = new { @class = "form-control", style = "resize: none;" }})
                @Html.ValidationMessageFor(model => model.Applicant.Education, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Applicant.Skills, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Applicant.Skills, new { htmlAttributes = new { @class = "form-control", style = "resize: none;" } })
                @Html.ValidationMessageFor(model => model.Applicant.Skills, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Applicant.Experience, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Applicant.Experience, new { htmlAttributes = new { @class = "form-control", style = "resize: none;" } })
                @Html.ValidationMessageFor(model => model.Applicant.Experience, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Applicant.Id, new { Value = Model.Applicant.Id })
            </div>
        </div>
        <div class="form-group">
            <p class="col-md-offset-1"><strong>Fields of interest</strong></p>
            <div class="col-md-offset-2 col-md-9 ">                
                @for (int i = 0; i < Enum.GetNames(typeof(Keyword)).Length; i++)
                {
                    <div class="form-group col-md-3">
                        @Html.CheckBoxFor(model => model.Keywords[i], new {htmlAttributes = new {@class = "form-control"}})
                        @Html.LabelFor(model => model.Keywords[i], ((Keyword) i).ToString(), new {@class = "control-label", style = "font-weight: normal;" })
                    </div>
                }
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="button" value="Cancel" class="btn btn-danger" onclick="location.href='@Url.Action("Index", "Applicant")'" />
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
